# Gathers facts for the machines in the Linux group (a.k.a Delegating facts)
# This works now, but doesn't return much -- kf
# - name: Gather info
#  hosts: Linux
#  tasks:
#    - name: Gather facts from server
#      ansible.builtin.setup:
#      delegate_to: "{{ item }}"
#      delegate_facts: true
#      loop: "{{ groups['Linux'] }}"
#
# This will work on hosts that use apt
# Still need to put the files where they really belong, but it stages them in /backups/NFS for now




- name: Ubuntu host config
  hosts: debian
  become: true
  tasks:
    - name: Create /backups directory if it does not exist
      ansible.builtin.file:
        path: /backups
        state: directory
        mode: '0766'
#updates
  - name: Run the equivalent of "apt-get update" as a separate step
    ansible.builtin.apt:
      update_cache: yes

  - name: Update all packages to their latest version
    ansible.builtin.apt:
      name: "*"
      state: latest   
# Install the NFS and AutoFS packages on ubuntu with apt
    - name: Install packages
      ansible.builtin.apt:
        pkg:
          - nfs-common
          - nfs-kernel-server
          - autofs
        update_cache: true
# This will copy nfs and autofs config files to a staging area on the host
    - name: Copy config files to staging area
      ansible.builtin.copy:
        src: /home/kevin/gitrepos/Linux-DesktopStuff/NFS
        dest: /backups
        owner: root
        group: root
        mode: 0644
        follow: true
# Do some housecleaning, remove packages that aren't wanted
    - name: Remove the Apache package
      ansible.builtin.apt:
        name: httpd
        state: absent
# Create a directory that's the same on all of my Linux hosts
    - name: Create code directory
      ansible.builtin.file:
        path: /code
        state: directory
        owner: kevin
        group: kevin
        mode: 0775
# Share the /code directory as an NFS export
    - name: Export /code
      ansible.builtin.lineinfile:
        path: /etc/exports
        line: /code  *(rw,sync,no_subtree_check)
        state: present
# Create /nfs, this will be used by autofs as the starting point
    - name: Create nfs directory
      ansible.builtin.file:
        path: /nfs
        state: directory
        owner: kevin
        group: kevin
        mode: 0775
# Create the autofs files, and populate them
    - name: Update auto.master
      ansible.builtin.lineinfile:
        path: /etc/auto.master
        line: "/nfs /etc/auto.nfs"
        state: present
    - name: Touch auto.nfs, but do not change times this makes the task idempotent
      ansible.builtin.file:
        path: /etc/auto.nfs
        state: touch
        mode: u+rwx,g+rwx,o+rwx
        modification_time: preserve
        access_time: preserve
#    - name: Update auto.nfs
# auto.nfs update with new addresses needed 
#      ansible.builtin.lineinfile:
#        path: /etc/auto.nfs
#        line: pi -fstype=nfs4 pi:/media
#        state: present
# Update /etc/hosts this is good for all systems
#    - name: Insert lines in /etc/hosts
#      ansible.builtin.lineinfile:
#        path: /etc/hosts
#        line: "192.168.86.49 pavillion pavillion.flanagannc.net
#        192.168.86.36 pi pi.flanagannc.net
#        192.168.122.12 fedoraworkstation
#        192.168.122.111 mint
#        192.168.86.59 envy"
#        state: present
    - name: Restart NFS server
      ansible.builtin.systemd:
        name: nfs-server.service
        state: reloaded
    - name: Add lines to hosts file if not there
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^192.168.1.233', line: '192.168.1.233 pavillion pavillion.flanagannc.net' }
        - { regexp: '^192.168.122.12', line: '#192.168.122.12 fedoraworkstation' }
        - { regexp: '^192.168.122.111', line: '#192.168.122.111 mint' }
        - { regexp: '^192.168.1.104', line: '192.168.1.104 envy' }
#    - name: "Replace line in hosts with envy"
#      replace: 
#        path: /etc/hosts
#        regexp: '(^envy\s)(.*)$'
#        replace: '\192.168.1.104 envy'
#        backup: yes
    


#  Command to run this from Ansible server is     -->      ansible-playbook kmf2.yaml --extra-vars 'ansible_become_pass=PassWordHere

# The files in the directory are
# autofs.conf
# auto.master
# auto.nfs
# auto.smb
# nfs.conf
