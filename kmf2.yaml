# Ensure a service is started on all webservers:

# ansible webservers -m ansible.builtin.service -a "name=httpd state=started"
# Alternatively, restart a service on all webservers:

# ansible webservers -m ansible.builtin.service -a "name=httpd state=restarted"
# Ensure a service is stopped:

# ansible webservers -m ansible.builtin.service -a "name=httpd state=stopped"
# # ###################################################################################

#
# Gathers facts for the machines in the Linux group (a.k.a Delegating facts)
# This works now, but doesn't return much -- kf
# - name: Gather info
#  hosts: Linux
#  tasks:
#    - name: Gather facts from server
#      ansible.builtin.setup:
#      delegate_to: "{{ item }}"
#      delegate_facts: true
#      loop: "{{ groups['Linux'] }}"
# - name: Do NFS setup
#  hosts: pavillion
#  tasks:

      # - name: Create a directory if it does not exist
      #  hosts: pavillion
      #  ansible.builtin.file:
      #    path: /backups
      #    state: directory
      #    mode: '0755'

# This will copy the whole directory
#  - name: Ansible Copy Example Local to Remote
#    hosts: pavillion
#    tasks:
#      - name: copying files with playbook
#        become: true 
#        copy:
#          src: /home/kevin/gitrepos/Linux-DesktopStuff/NFS
#          dest: /backups
#          owner: root
#          group: root        
#          mode: 0644

    - name: copy rundeck files
      hosts: pavillion
      become: true
      ansible.builtin.copy: src=/home/kevin/gitrepos/Linux-DesktopStuff/NFS/{{ item }} dest=/backups/
      with_items:
        - autofs.conf
        - auto.master
        - auto.nfs
        - auto.smb
        - nfs.conf


#  Command to run this from Ansible server is     -->      ansible-playbook kmf2.yaml --extra-vars 'ansible_become_pass=PassWordHere

# autofs.conf
# auto.master
# auto.nfs
# auto.smb
# nfs.conf
